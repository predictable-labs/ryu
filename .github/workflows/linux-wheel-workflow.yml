name: Build Linux Wheels

on:
  workflow_dispatch:
  workflow_call:
    inputs:
      isNightly:
        type: boolean
        required: true
        default: false

jobs:
  build-linux-wheels-x86_64:
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v4

      - name: Update nightly version
        if: ${{ inputs.isNightly == true }}
        run: |
          python3 -m pip install packaging
          python3 update-nightly-build-version.py
        working-directory: scripts

      - name: Build wheels
        working-directory: ./scripts/pip-package/
        run: |
          # Build wheels for multiple Python versions
          for PYBIN in /opt/python/cp3{8,9,10,11,12}*/bin; do
            if [ -d "$PYBIN" ]; then
              echo "Building wheel with $PYBIN/python"
              "${PYBIN}/pip" install -U pip setuptools wheel
              "${PYBIN}/pip" wheel . --no-deps -w wheelhouse/
            fi
          done

          # Repair wheels to make them manylinux compatible
          for whl in wheelhouse/*.whl; do
            if [[ ! "$whl" =~ manylinux ]]; then
              auditwheel repair "$whl" -w wheelhouse/
              rm "$whl"
            fi
          done

      - uses: actions/upload-artifact@v4
        with:
          name: linux-wheels-x86_64
          path: ./scripts/pip-package/wheelhouse/*manylinux_2_28_x86_64.whl

  build-linux-wheels-aarch64:
    # Make sure this job runs on the larger self-hosted Linux ARM64 machine
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v4

      - name: Update nightly version
        if: ${{ inputs.isNightly == true }}
        run: |
          python3 -m pip install packaging
          python3 update-nightly-build-version.py
        working-directory: scripts

      - name: Build wheels
        working-directory: ./scripts/pip-package/
        run: |
          # Build wheels for multiple Python versions
          for PYBIN in /opt/python/cp3{8,9,10,11,12}*/bin; do
            if [ -d "$PYBIN" ]; then
              echo "Building wheel with $PYBIN/python"
              "${PYBIN}/pip" install -U pip setuptools wheel
              "${PYBIN}/pip" wheel . --no-deps -w wheelhouse/
            fi
          done

          # Repair wheels to make them manylinux compatible
          for whl in wheelhouse/*.whl; do
            if [[ ! "$whl" =~ manylinux ]]; then
              auditwheel repair "$whl" -w wheelhouse/
              rm "$whl"
            fi
          done

      - uses: actions/upload-artifact@v4
        with:
          name: linux-wheels-aarch64
          path: ./scripts/pip-package/wheelhouse/*manylinux_2_28_aarch64.whl
