name: Build Extensions

on:
  workflow_dispatch:

  workflow_call:
    inputs:
      x86_64LinuxOnly:
          type: boolean
          required: false
          default: false

jobs:
  build-linux-extensions-x86_64:
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v4

      - name: Install DuckDB
        uses: ./.github/actions/install-duckdb

      - name: Build precompiled extensions
        run: make extension-release NUM_THREADS=$(nproc)

      - name: Collect built artifacts
        run: python3 scripts/collect-extensions.py

      - name: Upload built artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ryu-extensions_linux-x86_64
          path: extension-artifacts

  build-linux-extensions-aarch64:
    if: ${{ inputs.x86_64LinuxOnly != true }}
    runs-on: self-hosted

    steps:
      - uses: actions/checkout@v4

      - name: Install DuckDB
        uses: ./.github/actions/install-duckdb

      - name: Build precompiled extensions
        run: make extension-release NUM_THREADS=$(nproc)

      - name: Collect built artifacts
        run: python3 scripts/collect-extensions.py

      - name: Upload built artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ryu-extensions_linux-aarch64
          path: extension-artifacts

  build-mac-extensions-arm64:
    if: ${{ inputs.x86_64LinuxOnly != true }}
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install DuckDB
        uses: ./.github/actions/install-duckdb

      - name: Build precompiled extensions
        run: make extension-release NUM_THREADS=$(sysctl -n hw.logicalcpu) EXTRA_CMAKE_FLAGS="-DDuckDB_DIR=$HOME/duckdb"
        env:
          MACOSX_DEPLOYMENT_TARGET: 11.0
          CMAKE_OSX_ARCHITECTURES: "arm64"

      - name: Collect built artifacts
        run: python3 scripts/collect-extensions.py

      - name: Upload built artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ryu-extensions_osx-arm64
          path: extension-artifacts

  build-mac-extensions-x86_64:
    if: ${{ inputs.x86_64LinuxOnly != true }}
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install DuckDB
        uses: ./.github/actions/install-duckdb

      - name: Build precompiled extensions
        run: make extension-release NUM_THREADS=$(sysctl -n hw.logicalcpu) EXTRA_CMAKE_FLAGS="-DDuckDB_DIR=$HOME/duckdb"
        env:
          MACOSX_DEPLOYMENT_TARGET: 11.0
          CMAKE_OSX_ARCHITECTURES: "x86_64"

      - name: Collect built artifacts
        run: python3 scripts/collect-extensions.py

      - name: Upload built artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ryu-extensions_osx-x86_64
          path: extension-artifacts

  build-windows-extensions-x86_64:
    if: ${{ inputs.x86_64LinuxOnly != true }}
    runs-on: windows-latest
    env:
      NUM_THREADS: 18
    steps:
      - uses: actions/checkout@v4

      - name: Install DuckDB
        uses: ./.github/actions/install-duckdb

      - name: Setup MSVC
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: x64

      - name: Build precompiled extensions
        shell: cmd
        run: |
          make extension-release EXTRA_CMAKE_FLAGS="-DDuckDB_DIR=C:\Program Files\duckdb"

      - name: Collect built artifacts
        run: python scripts/collect-extensions.py

      - name: Upload built artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ryu-extensions_win-x86_64
          path: extension-artifacts
